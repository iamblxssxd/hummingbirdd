// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  words         Word[]
  texts         Text[]

  username String? @unique

  image    String?
  accounts Account[]
  sessions Session[]
}

model Word {
  id              String   @id @default(cuid())
  word            String   @unique
  definition      String
  shortDefinition String
  dateAdded       DateTime @default(now())
  favorite        Boolean
  texts           Text[]

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  textId String
}

model Text {
  id        String   @id @default(cuid())
  content   Json?
  dateAdded DateTime @default(now())
  word      Word?    @relation(fields: [wordId], references: [id])
  wordId    String?

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}
